  Scanning sources for module dependencies...
  CompositeHittable.h
  Compiling...
  CompositeHittable.h
C:\Users\Xiaoyang\Desktop\8599\8599RayTracer\8599RayTracer\RayTracingToolbox.h(21,14): warning C5260: the constant variable 'positive_infinity' has internal linkage in an included header file context, but external linkage in imported header unit context; consider declaring it 'inline' as well if it will be shared across translation units, or 'static' to express intent to use it local to this translation unit
C:\Users\Xiaoyang\Desktop\8599\8599RayTracer\8599RayTracer\RayTracingToolbox.h(22,14): warning C5260: the constant variable 'pi' has internal linkage in an included header file context, but external linkage in imported header unit context; consider declaring it 'inline' as well if it will be shared across translation units, or 'static' to express intent to use it local to this translation unit
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\atomic(325,35): warning C5260: the constant variable 'std::memory_order const (* `std::memory_order __cdecl std::_Combine_cas_memory_orders(std::memory_order,std::memory_order)'::`2'::_Combined_memory_orders)[6]' has internal linkage in an included header file context, but external linkage in imported header unit context; consider declaring it 'inline' as well if it will be shared across translation units, or 'static' to express intent to use it local to this translation unit
  CompositeHittable.cpp
  main.cpp
C:\Users\Xiaoyang\Desktop\8599\8599RayTracer\8599RayTracer\Material.h(14,16): warning C4099: 'HitRecord': type name first seen using 'struct' now seen using 'class'
C:\Users\Xiaoyang\Desktop\8599\8599RayTracer\8599RayTracer\HitRecord.h(16,8): message : see declaration of 'HitRecord'
  Sphere.cpp
  Generating Code...
  8599RayTracer.vcxproj -> C:\Users\Xiaoyang\Desktop\8599\8599RayTracer\x64\Debug\8599RayTracer.exe
